<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>水榭清松-Song Kong</title>
    <description>This is Song' home.</description>
    <link>http://localhost:4000/</link>
    <atom:link href="http://localhost:4000/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Mon, 23 Jan 2017 10:55:29 +0900</pubDate>
    <lastBuildDate>Mon, 23 Jan 2017 10:55:29 +0900</lastBuildDate>
    <generator>Jekyll v3.3.1</generator>
    
      <item>
        <title>Test Driven Development</title>
        <description>&lt;h1&gt; TDD(Test Driven Development)란? &lt;/h1&gt;
&lt;blockquote&gt;
	&lt;p&gt;&quot;테스트 주도 개발&quot;&lt;/p&gt;
	&lt;p&gt;&quot; Test the program before you write it - Kent Beck &quot;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;켄트 벡은 TDD를 소개한 책에서 “프로그램을 작성하기 전에 테스트를 먼저 작성하는 것”이라고 테스트 주도 개발을 정의했다. 프로그램도 작성하지 않았는데 테스트를 먼저 하는 것이 이상할 수도 있다.
TDD는 “업무 코드를 작성하기 전에 테스트 코드를 먼저 만드는 것”으로 정의되기도 한다. 코드를 검증하는 테스트 코드를 먼저 만든 다음에 실제 작성해야 하는 프로그램 코드작성을 하라는 뜻이다. 최초에는 테스트 우선개발(Test First Development)라고 불렸으나, 지금은 테스트 주도개발(Test Driven Development, TDD)라고 부른다.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;
&lt;h1&gt; JUnit &lt;/h1&gt;
&lt;p&gt;JUnit은 하나의 메소드 단위에서 그 메소드가 정상적으로 실행되는지를 확인하는, 즉 단위 테스트를 쉽게 할 수 있도록 도와주는 framework이다. 아래의 메소드들을 사용해서 테스트를 할 수 있다.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;
	&lt;pre&gt;
	&lt;span class=&quot;na&quot;&gt;assertTrue&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;(a)&lt;/span&gt;&lt;span style=&quot;color:black&quot;&gt; : a가 true인지 확인&lt;/span&gt;
	&lt;span class=&quot;na&quot;&gt;assertSame&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;(a, b)&lt;/span&gt;&lt;span style=&quot;color:black&quot;&gt; : a와 b가 같은 객체인지 확인&lt;/span&gt;
	&lt;span class=&quot;na&quot;&gt;assertNotNull&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;(a)&lt;/span&gt;&lt;span style=&quot;color:black&quot;&gt; : a가 null이 아님을 확인&lt;/span&gt;
	&lt;span class=&quot;na&quot;&gt;assertEquals&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;(a, b)&lt;/span&gt;&lt;span style=&quot;color:black&quot;&gt; : a와 b의 값이 같은지 확인&lt;/span&gt;
	&lt;span class=&quot;na&quot;&gt;assertArrayEquals&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;(a, b)&lt;/span&gt;&lt;span style=&quot;color:black&quot;&gt; : 배열 a와 b가 일치하는지 확인&lt;/span&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;
&lt;h4&gt; JUnit을 사용해 보면서 생긴 문제와 해결들 &lt;/h4&gt;

&lt;p&gt;처음 JUnit을 사용해할 때, 계속 실행이 되지 않아서 오랜 시간을 투자했던 부분이다. (딱 3줄을 추가… 함으로써 문제는 해결되었다)&lt;/p&gt;
&lt;figure class=&quot;highlight&quot;&gt;
	&lt;pre&gt;
	&lt;span style=&quot;color:black&quot;&gt;1. &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;@Runwith&lt;/span&gt;&lt;span style=&quot;color:black&quot;&gt;(SpringJUnit4ClassRunner.class)&lt;/span&gt;
	&lt;span style=&quot;color:black&quot;&gt;2. &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;@WebAppConfiguration&lt;/span&gt;
	&lt;span style=&quot;color:black&quot;&gt;3. &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;@ContextConfiguration&lt;/span&gt;&lt;span style=&quot;color:black&quot;&gt;(locations=&quot;file:src/main/webapp/WEB-INF/spring/appServlet/&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;servlet-context.xml&quot;)&lt;/span&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;@Runwith는 JUnit 프레임워크의 테스트 실행 방법을 확장할 때 사용하는 애노테이션이다. SpringJUnit4ClassRunner라는 JUnit용 테스트 컨텍스트 프레임워크 확장 클래스를 지정해주면 JUnit이 테스트를 진행하는 중에 테스트가 사용할 애플리케이션 컨텍스트를 만들과 관리하는 작업을 진행해준다.&lt;/p&gt;

&lt;p&gt;@WebAppConfiguration는 ApplicationContext가  WebApplicationContext여야만 하는 통합 테스트를 위해 로드될 때 붙이는 어노테이션이다.&lt;/p&gt;

&lt;p&gt;@ContextConfiguration은 자동으로 만들어줄 Application Context의 설정파일 위치를 지정하는 것이다.&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;출처 : Spring docs&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://docs.spring.io/spring/docs/current/javadoc-api/org/springframework/test/context/web/WebAppConfiguration.html&quot;&gt;http://docs.spring.io/spring/docs/current/javadoc-api/org/springframework/&lt;br /&gt;                                                           test/context/web/WebAppConfiguration.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;출처 : [배워서 남주자]&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://countryxide.tistory.com/17&quot;&gt;http://countryxide.tistory.com/17&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;출처 : NAVER CAFE &lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://cafe.naver.com/buldon/4934&quot;&gt;http://cafe.naver.com/buldon/4934&lt;/a&gt;&lt;/p&gt;
</description>
        <pubDate>Sat, 21 Jan 2017 17:04:10 +0900</pubDate>
        <link>http://localhost:4000/blog/test/</link>
        <guid isPermaLink="true">http://localhost:4000/blog/test/</guid>
        
        <category>test</category>
        
        <category>JUnit</category>
        
        <category>version</category>
        
        <category>computer</category>
        
        <category>back-end</category>
        
        <category>TDD</category>
        
        
        <category>Back-end</category>
        
      </item>
    
      <item>
        <title>기술교육 2주차 주말 Diary</title>
        <description>&lt;p&gt;2017.01.16. Mon : 프로젝트 기획 발 ! 표 !&lt;/p&gt;

&lt;p&gt;2017.01.17. Tue : Git 교육, 루키햇님TF 회식&lt;/p&gt;

&lt;p&gt;2017.01.18. Wed : 프로젝트 환경설정, DB설계&lt;/p&gt;

&lt;p&gt;2017.01.19. Thur : HTML/CSS 강의, MemberDao, Dto 설계&lt;/p&gt;

&lt;p&gt;2017.01.20. Fri : MemberService, serviceTest 작성&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;이번 한 주도 많은 일이 있었고, 많은 야근도 있었고… &lt;br /&gt;
일단 먼저 가장 큰 이슈였던, 걱정하던 발표를 했다 &lt;br /&gt;
내 모습을 보고자, 잘한건 기억하고, 부족한건 고치고자, &lt;br /&gt;
영상도 찍어놓고 봤는데, 나름 준비한 만큼(?) 혹은 좀 더 잘 &lt;br /&gt;
선방은 한 것 같아 다행이다.&lt;/p&gt;

&lt;p&gt;화요일엔 멘토님과 “계절밥상”에서 회식도했다 &lt;br /&gt;
밥도 맛있었고, 분위기도 좋았고, 함께있던 사람들도….&lt;/p&gt;

&lt;p&gt;Git 강의와 HTML 강의도 있었는데 유익한 시간이었고, 많이 배웠다 &lt;br /&gt;
시기 적절하게 프로젝트도 시작되면서 배운 것들을 사용할 수 있었다&lt;/p&gt;

&lt;p&gt;이번주엔 기능 구현을 시작했고, 쉽지는 않지만 잘 진행되고 있는 것 같다 &lt;br /&gt;
일단 이번주에 계획한 부분까지 잘 마친 것 같고, 부지런하게 잘 하고 있다&lt;br /&gt;
열심히 해서 좋은 완성품이 나오길…☆&lt;/p&gt;
</description>
        <pubDate>Sat, 21 Jan 2017 15:04:10 +0900</pubDate>
        <link>http://localhost:4000/blog/2017.01.21.Sat.diary/</link>
        <guid isPermaLink="true">http://localhost:4000/blog/2017.01.21.Sat.diary/</guid>
        
        <category>Diary</category>
        
        
        <category>Diary</category>
        
      </item>
    
      <item>
        <title>입사한 지 2주가 지난 지금</title>
        <description>&lt;p&gt;2017.01.02 기대하던 첫 입사&lt;br /&gt;
기쁜 일이 있은 뒤엔 슬픈 일이, 슬픈 일이 있은 뒤엔 기쁜 일이 있다더니,&lt;br /&gt;
입사 당일 저녁 외할머니가 돌아가셨다는 슬픈 소식을 들었다.&lt;br /&gt;
3일간 장례식장에서 슬퍼하기도 하고, 오랜만에 만난 가족들과 대화도 하고,&lt;br /&gt;
그렇게 입사 일주일은 빨리도 지나갔다.&lt;/p&gt;

&lt;p&gt;2017.01.09 - 2017.01.14 기술 교육 시작. 그리고 지금&lt;br /&gt; 
진짜 교육이 시작되었다. 자리 배치도 받았고, 내 업무용 컴퓨터도 생겼고..&lt;br /&gt;
신나고, 설레면서도 두렵기도 했지만 열심히 잘 해나가고 있는 것 같다.&lt;/p&gt;

&lt;p&gt;2주라는 시간이 눈 깜짝할 새 지나갔고, 어느 정도 회사에 적응도 하고 있다.&lt;br /&gt;
어느 누가 시키지도 않았고, 강제성을 띄지도 않았지만&lt;br /&gt;
거의 매일 야근을 했고, 지금 토요일도 나와서 프로젝트기획 발표를 준비했다.&lt;br /&gt;
단지 나에게 주어진, 내 할일에 최선을 다해..!&lt;/p&gt;

&lt;p&gt;아직 할 일이 많이 남았다…&lt;br /&gt;
주말 동안 책도 열심히 보고 공부하고, 발표 준비도 잘 해야겠다.&lt;br /&gt;
이건 이제 여기까지… ㅎ.ㅎ&lt;/p&gt;
</description>
        <pubDate>Sat, 14 Jan 2017 16:33:30 +0900</pubDate>
        <link>http://localhost:4000/blog/2017.01.14.Sat.diary/</link>
        <guid isPermaLink="true">http://localhost:4000/blog/2017.01.14.Sat.diary/</guid>
        
        <category>Diary</category>
        
        
        <category>Diary</category>
        
      </item>
    
      <item>
        <title>CSS란?</title>
        <description>&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;요약&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;웹 문서의 전반적인 스타일을 미리 저장해 둔 스타일시트이다. 문서 전체의 일관성을 유지할 수 있고, 세세한 스타일 지정의 필요를 줄어들게 하였다.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;본문&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;기존의 HTML은 웹 문서를 다양하게 설계하고 수시로 변경하는데 많은 제약이 따르는데, 이를 보완하기 위해 만들어진 것이 스타일 시트이고 스타일 시트의 표준안이 바로 CSS이다. 간단히 스타일 시트라고도 한다.&lt;/p&gt;

&lt;p&gt;HTML을 이용해서 웹 페이지를 제작할 경우 전반적인 틀에서 세세한 글꼴 하나 하나를 일일이 지정해주어야 하지만, 웹 페이지의 스타일(작성형식)을 미리 저장해 두면 웹 페이지의 한 가지 요소만 변경해도 관련되는 전체 페이지의 내용이 한꺼번에 변경되므로, 문서 전체의 일관성을 유지할 수 있고 작업 시간도 단축된다.&lt;/p&gt;

&lt;p&gt;따라서 웹 개발자들은 보다 풍부한 디자인으로 웹을 설계할 수 있고, 글자의 크기, 글자체, 줄간격, 배경 색상, 배열위치 등을 자유롭게 선택하거나 변경할 수 있으며 유지·보수도 간편하게 할 수 있다.&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;출처 : NAVER 지식백과&lt;br /&gt;
&lt;a href=&quot;http://terms.naver.com/entry.nhn?docId=1179641&amp;amp;cid=40942&amp;amp;categoryId=32854&quot;&gt;http://terms.naver.com/entry.nhn?docId=1179641&amp;amp;cid=40942&amp;amp;categoryId=32854&lt;/a&gt;&lt;/p&gt;
</description>
        <pubDate>Sat, 24 Dec 2016 23:12:30 +0900</pubDate>
        <link>http://localhost:4000/blog/css/</link>
        <guid isPermaLink="true">http://localhost:4000/blog/css/</guid>
        
        <category>front-end</category>
        
        <category>CSS</category>
        
        <category>computer</category>
        
        
        <category>Front-end</category>
        
      </item>
    
      <item>
        <title>database란?</title>
        <description>&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;1) 데이터베이스의 개념 및 정의&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;기존의 파일시스템에서는 중복된 정보를 효율적으로 처리하는 것이 관점 연구 분야였다. 이 중복을 피하여 정보를 일원화(一元化)하여 처리를 효율적으로 수행하기 위해서 서로 관련성을 가지며 중복이 없는 데이터의 집합을 유지하는 것을 데이터베이스(－, database)라고 한다. 그리고 데이터베이스를 관리하는 시스템을 데이터베이스 관리시스템(DBMS: Database Management System)이라 한다. 데이터베이스의 대표적인 구조는 트리구조(tree structure)인 구조적 데이터베이스 외에 관계형 데이터베이스(relational database)와 객체지향 데이터베이스 구조로 대별한다.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;2) 데이터베이스의 구성&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;데이터베이스는 특정 조직의 업무를 수행하는 데 필요한 상호 관련된 데이터들의 모임으로, 최소의 중복으로 통합(integrated), 저장(stored)된 운영(operation) 데이터로 구성된다.&lt;/p&gt;

&lt;p&gt;(1) 통합 데이터(integrated data)&lt;/p&gt;

&lt;p&gt;중복을 배제하나, 경우에 따라 불가피하게 중복을 허용하는 데이터다. 이러한 의도적 중복은 항상 파악하여 관리할 수 있으며, 이러한 것을 최소의 중복 또는 통제된 중복이라고 한다.&lt;/p&gt;

&lt;p&gt;(2) 저장 데이터(stored data)&lt;/p&gt;

&lt;p&gt;컴퓨터의 저장매체에 저장하여 관리하는 데이터를 의미한다.&lt;/p&gt;

&lt;p&gt;(3) 운영 데이터(operation data)&lt;/p&gt;

&lt;p&gt;단순한 데이터의 집합이 아니라 그 조직의 기능을 수행하는 데 없어서는 안 될 필수의 데이터를 의미한다.&lt;/p&gt;

&lt;p&gt;(4) 공용 데이터(shared data)&lt;/p&gt;

&lt;p&gt;어느 하나의 응용프로그램이나 응용시스템을 위한 데이터가 아니라, 그 조직의 여러 사용자와 여러 응용시스템들이 서로 다른 목적으로 데이터를 공동으로 이용할 수 있게 한다.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;3) 데이터베이스의 특징&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;① 실시간 접근성(real time accessibility): 사용자의 질의에 대하여 즉시 처리하여 응답하는 특징을 갖는다.&lt;/p&gt;

&lt;p&gt;② 계속적인 진화(continuous evolution): 삽입, 삭제, 갱신을 통하여 항상 최근의 정확한 데이터를 동적으로 유지하는 특징이 있다.&lt;/p&gt;

&lt;p&gt;③ 동시 공유(concurrent sharing): 여러 사용자가 동시에 원하는 데이터를 공유할 수 있는 특징을 갖는다.&lt;/p&gt;

&lt;p&gt;④ 내용에 의한 참조(content reference): 데이터베이스에 있는 데이터를 참조할 때 투플(tuple)의 주소나 위치가 아닌 사용자가 요구하는 데이터 내용에 따라 참조하는 특징을 갖는다.&lt;/p&gt;

&lt;p&gt;⑤ 데이터 논리적 독립성(independence): 응용프로그램과 데이터베이스를 독립시킴으로써 데이터의 논리적 구조를 변경시키더라도 응용프로그램은 변경되지 않는 특징을 갖는다.&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;출처 : NAVER 지식백과&lt;br /&gt;
&lt;a href=&quot;http://terms.naver.com/entry.nhn?docId=2073344&amp;amp;cid=44414&amp;amp;categoryId=44414&quot;&gt;http://terms.naver.com/entry.nhn?docId=2073344&amp;amp;cid=44414&amp;amp;categoryId=44414&lt;/a&gt;&lt;/p&gt;
</description>
        <pubDate>Mon, 03 Oct 2016 16:52:30 +0900</pubDate>
        <link>http://localhost:4000/blog/database/</link>
        <guid isPermaLink="true">http://localhost:4000/blog/database/</guid>
        
        <category>batabase</category>
        
        <category>db</category>
        
        <category>back-end</category>
        
        <category>computer</category>
        
        
        <category>Back-end</category>
        
      </item>
    
      <item>
        <title>javascript란?</title>
        <description>&lt;p&gt;HTML 문서의 정적이고 단조로운 한계를 극복하기 위해 넷스케이프(Netscape)사가 만든 livescript가 그 이름을 달리 한 것으로서 브라우저 자체에 내장된 해석기능을 이용한 클라이언트(client) 기반의 일종의 스크립트 언어이다. 작고도 빠르기 때문에 웹문서를 동적으로 꾸밀 때 가장 널리 쓰인다.&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;출처 : NAVER 지식백과&lt;br /&gt;
&lt;a href=&quot;http://terms.naver.com/entry.nhn?docId=782468&amp;amp;cid=50305&amp;amp;categoryId=50305&quot;&gt;http://terms.naver.com/entry.nhn?docId=782468&amp;amp;cid=50305&amp;amp;categoryId=50305&lt;/a&gt;&lt;/p&gt;
</description>
        <pubDate>Thu, 15 Sep 2016 14:40:30 +0900</pubDate>
        <link>http://localhost:4000/blog/javascript/</link>
        <guid isPermaLink="true">http://localhost:4000/blog/javascript/</guid>
        
        <category>computer</category>
        
        <category>front-end</category>
        
        <category>javascript</category>
        
        
        <category>Front-end</category>
        
      </item>
    
      <item>
        <title>작성 Test</title>
        <description>&lt;p&gt;첫번째 Posting Test&lt;/p&gt;
</description>
        <pubDate>Wed, 31 Aug 2016 22:58:30 +0900</pubDate>
        <link>http://localhost:4000/blog/first_post/</link>
        <guid isPermaLink="true">http://localhost:4000/blog/first_post/</guid>
        
        <category>방명록</category>
        
        
        <category>Life</category>
        
      </item>
    
  </channel>
</rss>
